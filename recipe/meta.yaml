{% set name = "coin-or-clp" %}
{% set version = "1.17.7" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://github.com/coin-or/Clp/archive/releases/{{ version }}.tar.gz
  sha256: c4c2c0e014220ce8b6294f3be0f3a595a37bef58a14bf9bac406016e9e73b0f5

build:
  number: 0
  skip: true  # [blas_impl != "openblas"]
  run_exports:
    - {{ pin_subpackage(name, min_pin='x.x', max_pin='x.x') }}

requirements:
  build:
    - gnuconfig 2021.05.24 # [unix]
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    - {{ compiler('fortran') }}
    - pkg-config
    - make  # [unix]
  host:
    - coin-or-utils 2.11.6
    - coin-or-osi 0.108.7
    - openblas {{ openblas }}         # [blas_impl == "openblas"]
    - readline 8.1 # [unix]
    - zlib
    - bzip2
    - ncurses 6.2
  run:
    - ncurses
    - libopenblas
  run_constrained:
    - coincbc * *_metapackage

test:
  commands:
    - test -f $PREFIX/lib/libClp${SHLIB_EXT}  # [unix]
    - test -f $PREFIX/lib/libOsiClp${SHLIB_EXT}  # [unix]
    - test -f $PREFIX/include/coin/ClpGubDynamicMatrix.hpp  # [unix]
    - test -f $PREFIX/include/coin/OsiClpSolverInterface.hpp  # [unix]
    - echo ? | clp

about:
  home: https://github.com/coin-or/Clp
  dev_url: https://github.com/coin-or/Clp
  doc_url: https://coin-or.github.io/Clp/Doxygen/
  license: EPL-2.0
  license_family: OTHER
  license_file: LICENSE
  summary: COIN-OR linear programming (Clp)
  description: |
    Clp (Coin-or linear programming) is an open-source linear programming solver.
    It is primarily meant to be used as a callable library, but a basic,
    stand-alone executable version is also available. It is designed to find
    solutions of mathematical optimization problems of the form

    minimize c'x such that lhs ≤ Ax ≤ rhs and lb ≤ x ≤ ub

    CLP includes primal and dual Simplex solvers. Both dual and primal algorithms can use matrix storage methods provided by the user (0-1 and network matrices are already supported in addition to the default sparse matrix). The dual algorithm has Dantzig and Steepest edge row pivot choices; new ones may be provided by the user. The same is true for the column pivot choice of the primal algorithm. The primal can also use a non linear cost which should work for piecewise linear convex functions. CLP also includes a barrier method for solving LPs.

extra:
  recipe-maintainers:
    - wolfv
    - tkralphs
